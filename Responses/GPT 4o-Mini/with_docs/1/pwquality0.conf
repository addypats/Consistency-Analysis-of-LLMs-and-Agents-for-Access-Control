# Enforce a minimum length of 15 characters (while 8 is the absolute minimum, we encourage longer passphrases)
minlen = 15

# Do not require specific character classes.
# By setting these credits to 0 the module does not force additional digits,
# uppercase, lowercase, or other characters, in line with NIST’s recommendation
# to favor long passphrases over complex ones.
dcredit = 0
ucredit = 0
lcredit = 0
ocredit = 0

# Enable dictionary checking to help catch obvious weak passwords such as “password”
# or common dictionary words, as well as simple sequential strings.
dictcheck = 1
dictpath = /usr/share/cracklib/pw_dict

# Optionally limit repeats in the password to discourage sequential or repeated characters.
maxrepeat = 3

# ---------------------------------------------------------------------------
# Note:
#
# • Although this configuration helps identify obvious weaknesses,
#   screening against lists of previously compromised (breached) passwords
#   must be accomplished with additional tools or integrations.
#
# • Organizations should avoid providing password hints, since these could
#   inadvertently offer clues to attackers.
#
# • Enhancing password-based authentication with multi-factor authentication
#   and risk-based techniques should be handled via additional PAM modules
#   and other security measures.
#
# • NIST recommends supporting passphrases of up to 64 characters.
#   While pwquality does not enforce a maximum length here, longer passwords
#   are encouraged.
# ---------------------------------------------------------------------------
